services:

  mysql-fleetspeak:
    image: mysql:8.2
    restart: always
    hostname: mysql-fleetspeak
    environment:
      MYSQL_DATABASE: 'fleetspeak'
      MYSQL_USER: 'fleetspeak-user'
      MYSQL_PASSWORD: 'fleetspeak-password'
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      - '3306:3306'
    expose:
      - '3306'
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 5s
      retries: 10

  mysql-grr:
    image: mysql:8.2
    restart: always
    command: --log-bin-trust-function-creators=ON
    hostname: mysql-grr
    environment:
      MYSQL_DATABASE: 'grr'
      MYSQL_USER: 'grr-user'
      MYSQL_PASSWORD: 'grr-password'
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      - '3307:3306'
    expose:
      - '3306'
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 5s
      retries: 10

  front-envoy:
    build:
      context: .
      dockerfile: ./containers/envoy/Dockerfile
      args:
        ENVOY_CONFIG: ./envoy-https-https.yaml
    hostname: fleetspeak-server
    ports:
    - "10000:10000"

  fleetspeak-admin:
    image: ghcr.io/google/fleetspeak:latest
    hostname: fleetspeak-admin
    depends_on:
      mysql-fleetspeak:
        condition: service_healthy
    entrypoint: [
      "server",
      "-components_config",
      "/config/fleetspeak-admin/components.textproto",
      "-services_config",
      "/config/fleetspeak-admin/services.textproto",
      "-alsologtostderr"
    ]
    volumes:
      - "./config:/config"
    ports:
      - '9091:9091'
    expose:
      - '9091'

  fleetspeak-frontend:
    image: ghcr.io/google/fleetspeak:latest
    hostname: fleetspeak-frontend
    depends_on:
      mysql-fleetspeak:
        condition: service_healthy
    entrypoint: [
      "server",
      "-components_config",
      "/config/fleetspeak-frontend/components.textproto",
      "-services_config",
      "/config/fleetspeak-frontend/services.textproto",
      "-alsologtostderr"
    ]
    volumes:
      - "./config:/config"
    ports:
      - '9090:9090'
      - '8080:8080'
      - '12000:12000'
    expose:
      - '9090'
      - '8080'
      - '12000'
    healthcheck:
      test: ["CMD", "curl", "http://localhost:8080"]
      timeout: 5s
      retries: 10

  grr-client:
    image: ghcr.io/google/grr:latest
    hostname: grr-client
    depends_on:
      front-envoy:
        condition:
          service_started
      fleetspeak-frontend:
        condition:
          service_healthy
    entrypoint: [
      "/bin/bash",
      "-c",
      "grr_client_build repack_multiple --templates /client_templates/*/*.zip --repack_configs /config/grr-client/client.yaml --output_dir /installers && dpkg -i /installers/client/*.deb && fleetspeak-client -config /config/grr-client/config.textproto"
      ]
    volumes:
      - "./config/:/config/"

  grr-admin:
    image: ghcr.io/google/grr:latest
    hostname: grr-admin
    depends_on:
      mysql-grr:
        condition: service_healthy
    command:
      - -component
      - admin_ui
      - -config
      - /config/grr-server/server.local.yaml
      - --verbose
    volumes:
      - "${PWD}/config/:/config/"
    ports:
      - '8000:8000'
    expose:
      - '8000'

  grr-frontend:
    image: ghcr.io/google/grr:latest
    hostname: grr-frontend
    depends_on:
      mysql-grr:
        condition: service_healthy
    command:
      - -component
      - frontend
      - -config
      - /configs/server.local.yaml
      - --verbose
    volumes:
      - "${PWD}/config/grr-server/:/configs/"
    ports:
      - '11111:11111'
    expose:
      - '11111'

  grr-worker:
    image: ghcr.io/google/grr:latest
    hostname: grr-worker
    depends_on:
      mysql-grr:
        condition: service_healthy
    command:
      - -component
      - worker
      - -config
      - /configs/server.local.yaml
      - --verbose
    volumes:
      - "${PWD}/config/grr-server/:/configs/"
